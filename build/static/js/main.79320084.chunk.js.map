{"version":3,"sources":["components/Bar.js","hooks/useWiki.js","components/UserScore.js","components/MovieDetails.js","components/MovieCard.js","components/MovieCardList.js","components/MovieSearchBar.js","hooks/useSearch.js","components/MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","Bar","classes","AppBar","position","Toolbar","Typography","variant","className","useSearch","React","useState","query","response","setResponse","error","setError","isLoading","setIsLoading","useEffect","url","encodeURI","createUrl","options","method","headers","Origin","a","fetch","res","json","fetchData","display","flexDirection","alignItems","wheel","score","top","UserScore","label","Box","component","CircularProgress","value","size","thickness","content","link","MovieDetails","name","useWiki","console","log","pages","Object","keys","extract","Button","href","pageid","target","color","height","media","backgroundPositionY","width","flexShrink","justifyContent","row","MovieCard","posterUrl","releaseDate","expanded","setExpanded","Card","elevation","CardMedia","image","fontSize","CardContent","onClick","Collapse","in","timeout","unmountOnExit","container","flexWrap","item","padding","maxWidth","MovieCardList","movieNodeList","Fragment","Grid","justify","length","map","movie","xs","poster","small","Date","toLocaleDateString","id","margin","grid","MovieSearchBar","onSearch","setQuery","handleClick","TextField","placeholder","onChange","e","onKeyPress","key","InputProps","startAdornment","InputAdornment","defaultQuery","newQuery","undefined","body","JSON","stringify","operationName","createBody","search","box","MovieList","data","searchMovies","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79320084.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function Bar({ ...props }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          The Movie Database\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function useSearch(title) {\r\n  const [query, setQuery] = React.useState(title);\r\n  const [response, setResponse] = React.useState(null);\r\n  const [error, setError] = React.useState(null);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const createUrl = (title) => {\r\n    return encodeURI(\r\n      \"https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&info&redirects=1&origin=*&titles=\" +\r\n        title\r\n    );\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const url = createUrl(query);\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Origin: \"*\",\r\n      },\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const res = await fetch(url, options);\r\n        const json = await res.json();\r\n        setResponse(json);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [query]);\r\n\r\n  return { response, error, isLoading };\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    position: \"relative\",\r\n  },\r\n  wheel: {},\r\n  score: {\r\n    position: \"absolute\",\r\n    top: 34,\r\n  },\r\n}));\r\n\r\nexport default function UserScore({ label, score }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"body2\" component=\"p\" className={classes.label}>\r\n        {label}\r\n      </Typography>\r\n      <CircularProgress\r\n        className={classes.wheel}\r\n        variant=\"determinate\"\r\n        value={score}\r\n        size={60}\r\n        thickness={5}\r\n      ></CircularProgress>\r\n      <Typography variant=\"h6\" component=\"b\" className={classes.score}>\r\n        {score}%\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useWiki from \"../hooks/useWiki\";\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  content: {},\r\n  link: {},\r\n});\r\n\r\nexport default function MovieDetails({ name }) {\r\n  const classes = useStyles();\r\n  const { response, error, isLoading } = useWiki(name);\r\n  console.log(response);\r\n  return (\r\n    <Box>\r\n      {isLoading && <CircularProgress />}\r\n      {response && (\r\n        <Box>\r\n          <Typography variant=\"body1\">\r\n            {response.query.pages[Object.keys(response.query.pages)[0]].extract}\r\n          </Typography>\r\n          <Button\r\n            href={\r\n              \"https://en.wikipedia.org/?curid=\" +\r\n              response.query.pages[Object.keys(response.query.pages)[0]].pageid\r\n            }\r\n            target={\"_blank\"}\r\n            color={\"primary\"}\r\n          >\r\n            Wikipedia\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      {error && \"Error Loading Wikipedia Data\"}\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useWiki from \"../hooks/useWiki\";\r\nimport MovieIcon from \"@material-ui/icons/Movie\";\r\nimport { Box, Collapse } from \"@material-ui/core\";\r\nimport UserScore from \"./UserScore\";\r\nimport MovieDetails from \"./MovieDetails\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  media: {\r\n    height: 150,\r\n    backgroundPositionY: 0,\r\n    width: 100,\r\n    flexShrink: 0,\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    flexGrow: 1,\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function MovieCard({ posterUrl, title, releaseDate, score }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  return (\r\n    <Card className={classes.root} elevation={3}>\r\n      {posterUrl ? (\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={posterUrl}\r\n          title=\"Poster of movie\"\r\n        />\r\n      ) : (\r\n        <MovieIcon\r\n          className={classes.media}\r\n          title=\"No movie poster\"\r\n          fontSize=\"large\"\r\n          color=\"primary\"\r\n        />\r\n      )}\r\n      <CardContent className={classes.content}>\r\n        <Box className={classes.row}>\r\n          <Box>\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={() => {\r\n                setExpanded(!expanded);\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" component=\"h2\">\r\n                {title}\r\n              </Typography>\r\n            </Button>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n              Release date: {releaseDate}\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <UserScore score={score * 10} label={\"User score:\"}></UserScore>\r\n          </Box>\r\n        </Box>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <MovieDetails name={title}></MovieDetails>\r\n        </Collapse>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    flexWrap: \"nowrap\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  item: {\r\n    flexGrow: 0,\r\n    flexShrink: 0,\r\n    padding: 10,\r\n    maxWidth: 900,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function MovieCardList({ movieNodeList }) {\r\n  const classes = useStyles();\r\n  console.log(movieNodeList);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container justify=\"center\" className={classes.container}>\r\n        {movieNodeList.length === 0 ? (\r\n          <Typography color={\"primary\"} variant={\"h5\"}>\r\n            We have looked everywhere but couldn't find that movie\r\n          </Typography>\r\n        ) : (\r\n          movieNodeList.map((movie) => (\r\n            <Grid item xs={12} key={movie.id} className={classes.item}>\r\n              <MovieCard\r\n                key={movie.id}\r\n                posterUrl={movie.poster ? movie.poster.small : null}\r\n                title={movie.name}\r\n                releaseDate={new Date(movie.releaseDate).toLocaleDateString()}\r\n                score={movie.score}\r\n              />\r\n            </Grid>\r\n          ))\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  InputAdornment,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  grid: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MovieSearchBar({ onSearch }) {\r\n  const classes = useStyles();\r\n  const [query, setQuery] = React.useState(\"Star Wars\");\r\n\r\n  function handleChange(e) {\r\n    setQuery(e.target.value);\r\n  }\r\n  function handleClick() {\r\n    if (query.length > 0) {\r\n      onSearch(query);\r\n    }\r\n  }\r\n  function handleKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      handleClick();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container className={classes.grid}>\r\n        <Typography variant=\"h5\">Search for a Movie:</Typography>\r\n        <TextField\r\n          className={classes.margin}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          placeholder=\"e.g.: Star Wars\"\r\n          value={query}\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Search />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function useSearch(defaultQuery) {\r\n  const [query, setQuery] = React.useState(defaultQuery);\r\n  const [response, setResponse] = React.useState(null);\r\n  const [error, setError] = React.useState(null);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const createBody = (query) => {\r\n    return JSON.stringify({\r\n      query: `query SearchMovies {  \r\n                searchMovies(query: \"${query}\") {\r\n                        id\r\n                        name \r\n                        releaseDate\r\n                        poster{\r\n                          small\r\n                        }  \r\n                        score\r\n                    }}`,\r\n      operationName: \"SearchMovies\",\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const body = createBody(query);\r\n\r\n    const url = \"https://tmdb.sandbox.zoosh.ie/dev/graphql\";\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: body,\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const res = await fetch(url, options);\r\n        const json = await res.json();\r\n        setResponse(json);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [query]);\r\n\r\n  async function search(newQuery) {\r\n    if (newQuery !== query) {\r\n      await setResponse(undefined);\r\n      await setQuery(newQuery);\r\n    }\r\n  }\r\n  return { response, error, isLoading, search };\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport MovieCardList from \"./MovieCardList\";\r\nimport MovieSearchBar from \"./MovieSearchBar\";\r\nimport useSearch from \"../hooks/useSearch\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MovieList({ ...props }) {\r\n  const classes = useStyles();\r\n\r\n  const { response, error, isLoading, search } = useSearch(\"Star Wars\");\r\n\r\n  if (response) {\r\n    console.log(response.data.searchMovies);\r\n  }\r\n  function handleSearch(query) {\r\n    search(query);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MovieSearchBar onSearch={handleSearch}></MovieSearchBar>\r\n      {response && (\r\n        <MovieCardList\r\n          movieNodeList={response.data.searchMovies}\r\n        ></MovieCardList>\r\n      )}\r\n      {isLoading && (\r\n        <Box className={classes.box}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import Bar from \"./components/Bar\";\nimport MovieList from \"./components/MovieList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Bar></Bar>\n      <MovieList></MovieList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}